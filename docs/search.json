[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Manu Thomasen. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thomasen M (2025). minidplyr: minidplyr. R package version 0.0.3.9000, https://github.com/ManuThomasen/minidplyr.","code":"@Manual{,   title = {minidplyr: minidplyr},   author = {Manu Thomasen},   year = {2025},   note = {R package version 0.0.3.9000},   url = {https://github.com/ManuThomasen/minidplyr}, }"},{"path":[]},{"path":"/reference/add.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — add","title":"Title — add","text":"description","code":""},{"path":"/reference/add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — add","text":"","code":"add(a, b)"},{"path":"/reference/add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — add","text":"number b number","code":""},{"path":"/reference/add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — add","text":"sum b '+ b'","code":""},{"path":"/reference/add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Title — add","text":"details","code":""},{"path":"/reference/add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — add","text":"","code":"add(1,2) #> [1] 3"},{"path":"/reference/filter2.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter rows of a data frame — filter2","title":"Filter rows of a data frame — filter2","text":"minimal base R helper filter rows data frame using logical condition evaluated data's environment. Rows condition NA dropped.","code":""},{"path":"/reference/filter2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter rows of a data frame — filter2","text":"","code":"filter2(data, condition)"},{"path":"/reference/filter2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter rows of a data frame — filter2","text":"data data frame. condition logical expression logical vector indicating rows keep. expression, evaluated context data. result must length 1 nrow(data). scalar TRUE/FALSE recycled nrow(data).","code":""},{"path":"/reference/filter2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter rows of a data frame — filter2","text":"data frame containing rows condition TRUE. Rows NA condition removed.","code":""},{"path":"/reference/filter2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter rows of a data frame — filter2","text":"","code":"df <- data.frame(x = 1:5, y = c(2, 2, 3, NA, 5))  # Expression evaluated in data context filter2(df, x > 2) #>   x  y #> 3 3  3 #> 4 4 NA #> 5 5  5  # Combine conditions filter2(df, x > 2 & y == 5) #>   x y #> 5 5 5  # Logical vector (must be length 1 or nrow(df)) keep <- c(TRUE, FALSE, TRUE, FALSE, TRUE) filter2(df, keep) #>   x y #> 1 1 2 #> 3 3 3 #> 5 5 5  # Scalar logical is recycled filter2(df, TRUE) #>   x  y #> 1 1  2 #> 2 2  2 #> 3 3  3 #> 4 4 NA #> 5 5  5"},{"path":"/reference/minidplyr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"minidplyr: minidplyr — minidplyr-package","title":"minidplyr: minidplyr — minidplyr-package","text":"package used learn develop R package.","code":""},{"path":[]},{"path":"/reference/minidplyr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"minidplyr: minidplyr — minidplyr-package","text":"Maintainer: Manu Thomasen manuth@ph.au.dk","code":""},{"path":"/reference/select2.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Variables from a Data Frame — select2","title":"Select Variables from a Data Frame — select2","text":"function selects variables (columns) data frame based either character vector variable names integer vector variable positions. simple wrapper around standard subsetting operator [ data frames.","code":""},{"path":"/reference/select2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Variables from a Data Frame — select2","text":"","code":"select2(data, vars)"},{"path":"/reference/select2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Variables from a Data Frame — select2","text":"data data frame variables selected. vars character vector variable names integer vector column positions.","code":""},{"path":"/reference/select2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Variables from a Data Frame — select2","text":"data frame containing selected variables.","code":""},{"path":"/reference/select2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Variables from a Data Frame — select2","text":"","code":"df <- data.frame(a = 1:5, b = 6:10, c = 11:15)  # Select by name select2(df, c(\"a\", \"c\")) #>   a  c #> 1 1 11 #> 2 2 12 #> 3 3 13 #> 4 4 14 #> 5 5 15  # Select by position select2(df, c(1, 3)) #>   a  c #> 1 1 11 #> 2 2 12 #> 3 3 13 #> 4 4 14 #> 5 5 15"}]
